

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  position: relative; // Asegura que tenga un contexto de stacking.
  z-index: 1; // Esto lo coloca encima de .bubbles.
  .login-container {
    position: relative;
    width: 22.2rem;
    z-index: 2; 

    .form-container {
      border: 2px solid hsla(0, 0%, 65%, 0.158);
      box-shadow: 0 0 36px 1px rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(20px);
      z-index: 99;
      padding: 2rem;
      border-radius: 0.5rem;
      z-index: 3; 
    }

    .login {
      input {
        display: block;
        padding: 11px;
        width: 100%;
        outline: none;
        border: none;
        font-weight: 500;
        letter-spacing: 0.8px;
        backdrop-filter: blur(15px);
        box-shadow: 0 0 16px 1px rgba(0, 0, 0, 0.2);

      }
      
      label{
        color: $white-color;
      }
    }

    // .circle {
    //   width: 10rem;
    //   height: 10rem;
    //   background: $primary-color;
    //   border-radius: 50%;
    //   position: absolute;
    //   box-shadow: 0 0 36px 1px rgba(0, 0, 0, 0.2);
    // }

    // .circle-one {
    //   top: 0;
    //   left: 0;
    //   z-index: -1;
    //   transform: translate(-45%, -45%);
    // }

    // .circle-two {
    //   bottom: 0;
    //   right: 0;
    //   z-index: -1;
    //   transform: translate(45%, 45%);
    // }
    .illustration {
      position: absolute;
      top: -14%;
      right: -2px;
      width: 90%;
    }
  }
}

$bubble-count: 50;
$sway-type: "sway-left-to-right", "sway-right-to-left";

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

@function sample($list) {
  @return nth($list, random(length($list)));
}

.bubbles {
  position: fixed; // Cambiado de relative a fixed para cubrir toda la pantalla.
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -2;

  .bubble {
    position: absolute;
    left: var(--bubble-left-offset);
    bottom: -75%;
    display: block;
    width: var(--bubble-radius);
    height: var(--bubble-radius);
    border-radius: 50%;
    animation: float-up var(--bubble-float-duration) var(--bubble-float-delay) ease-in infinite;

    &::before {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: $primary-color;
      border-radius: inherit;
      animation: var(--bubble-sway-type) var(--bubble-sway-duration) var(--bubble-sway-delay) ease-in-out alternate infinite;
    }
  }

  @for $i from 1 through $bubble-count {
    .bubble:nth-child(#{$i}) {
      --bubble-left-offset: #{random_range(0vw, 100vw)};
      --bubble-radius: #{random_range(1vw, 10vw)};
      --bubble-float-duration: #{random_range(6s, 12s)};
      --bubble-sway-duration: #{random_range(4s, 6s)};
      --bubble-float-delay: #{random_range(0s, 4s)};
      --bubble-sway-delay: #{random_range(0s, 4s)};
      --bubble-sway-type: #{sample($sway-type)};
    }
  }
}

@keyframes float-up {
  to {
    transform: translateY(-175vh);
  }
}

@keyframes sway-left-to-right {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes sway-right-to-left {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(-100%);
  }
}



