// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Practica.DataAcces;
using Practica.Entities.Entities;

#nullable disable

namespace Practica.DataAcces.Context
{
    public partial class PlantillaContext : DbContext
    {
        public PlantillaContext()
        {
        }

        public PlantillaContext(DbContextOptions<PlantillaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbImagenesPorClientes> tbImagenesPorClientes { get; set; }
        public virtual DbSet<tbMarcas> tbMarcas { get; set; }
        public virtual DbSet<tbModelos> tbModelos { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbPlanesPagos> tbPlanesPagos { get; set; }
        public virtual DbSet<tbPlanesPagosClientes> tbPlanesPagosClientes { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbTipoCuotas> tbTipoCuotas { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVehiculos> tbVehiculos { get; set; }
        public virtual DbSet<tbVehiculosPorClientes> tbVehiculosPorClientes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.Carg_Id)
                    .HasName("PK__tbCargos__B0D859FAEA5B7BD7");

                entity.ToTable("tbCargos", "Gral");

                entity.Property(e => e.Carg_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Carg_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Carg_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Carg_Usua_CreacionNavigation)
                    .WithMany(p => p.tbCargosCarg_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Carg_Usua_Creacion);

                entity.HasOne(d => d.Carg_Usua_ModificaNavigation)
                    .WithMany(p => p.tbCargosCarg_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Carg_Usua_Modifica);
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.Clie_Id)
                    .HasName("PK__tbClient__5BB95503980C9EEE");

                entity.ToTable("tbClientes", "Gral");

                entity.Property(e => e.Clie_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Clie_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Clie_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Clie_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Clie_Usua_CreacionNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Creacion);

                entity.HasOne(d => d.Clie_Usua_ModificaNavigation)
                    .WithMany(p => p.tbClientesClie_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Clie_Usua_Modifica);

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Esta_Id);

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Muni_Id);
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.Dept_Id)
                    .HasName("PK__tbDepart__72ABC2CCAFDE5C77");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.Property(e => e.Dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Dept_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Dept_Usua_CreacionNavigation)
                    .WithMany(p => p.tbDepartamentosDept_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Dept_Usua_Creacion);

                entity.HasOne(d => d.Dept_Usua_ModificaNavigation)
                    .WithMany(p => p.tbDepartamentosDept_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Dept_Usua_Modifica);
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.Empl_Id)
                    .HasName("PK__tbEmplea__2EB12E8610D447FA");

                entity.ToTable("tbEmpleados", "Gral");

                entity.Property(e => e.Empl_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Empl_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Empl_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Carg_Id);

                entity.HasOne(d => d.Empl_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Empl_Usua_Creacion);

                entity.HasOne(d => d.Empl_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Empl_Usua_Modifica);

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Esta_Id);

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Muni_Id);
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.Esta_Id)
                    .HasName("PK__tbEstado__D52AE7B85FDD80AB");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.Esta_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Esta_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Esta_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Esta_Usua_CreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Creacion);

                entity.HasOne(d => d.Esta_Usua_ModificaNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Esta_Usua_Modifica);
            });

            modelBuilder.Entity<tbImagenesPorClientes>(entity =>
            {
                entity.HasKey(e => e.Imcl_Id)
                    .HasName("PK__tbImagen__4C5D653D02BC082D");

                entity.ToTable("tbImagenesPorClientes", "Cred");

                entity.Property(e => e.Imcl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Imcl_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Imcl_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Imcl_Imagen).IsUnicode(false);

                entity.HasOne(d => d.Imcl_Usua_CreacionNavigation)
                    .WithMany(p => p.tbImagenesPorClientesImcl_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Imcl_Usua_Creacion)
                    .HasConstraintName("FK_tbImagenesPorClientes_Vecl_Usua_Creacionn");

                entity.HasOne(d => d.Imcl_Usua_ModificaNavigation)
                    .WithMany(p => p.tbImagenesPorClientesImcl_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Imcl_Usua_Modifica)
                    .HasConstraintName("FK_tbImagenesPorClientes_Vecl_Usua_Modifican");

                entity.HasOne(d => d.Vecl)
                    .WithMany(p => p.tbImagenesPorClientes)
                    .HasForeignKey(d => d.Vecl_Id)
                    .HasConstraintName("FK_tbImagenesPorClientes_Vecl_Id");
            });

            modelBuilder.Entity<tbMarcas>(entity =>
            {
                entity.HasKey(e => e.Marc_Id)
                    .HasName("PK__tbMarcas__DB7EE3BA329FF119");

                entity.ToTable("tbMarcas", "Gral");

                entity.HasIndex(e => e.Marc_Descripcion, "UQ__tbMarcas__2E48416819C7C283")
                    .IsUnique();

                entity.Property(e => e.Marc_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Marc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Marc_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Marc_Fecha_Modificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Marc_Usua_CreacionNavigation)
                    .WithMany(p => p.tbMarcasMarc_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Marc_Usua_Creacion)
                    .HasConstraintName("FK_tbMarcasVehiculo_Marve_Usua_Creacion");

                entity.HasOne(d => d.Marc_Usuario_ModificiacionNavigation)
                    .WithMany(p => p.tbMarcasMarc_Usuario_ModificiacionNavigation)
                    .HasForeignKey(d => d.Marc_Usuario_Modificiacion)
                    .HasConstraintName("FK_tbMarcasVehiculo_Marve_Usuario_Modificiacion");
            });

            modelBuilder.Entity<tbModelos>(entity =>
            {
                entity.HasKey(e => e.Mode_Id)
                    .HasName("PK__tbModelo__E81E8BE7F07CE1A2");

                entity.ToTable("tbModelos", "Cred");

                entity.Property(e => e.Mode_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Mode_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Mode_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Mode_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Marc)
                    .WithMany(p => p.tbModelos)
                    .HasForeignKey(d => d.Marc_Id)
                    .HasConstraintName("FK_tbModelos_Marve_Id");

                entity.HasOne(d => d.Mode_Usua_CreacionNavigation)
                    .WithMany(p => p.tbModelosMode_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Mode_Usua_Creacion)
                    .HasConstraintName("FK_tbModelos_Mode_Usu_Creacion");

                entity.HasOne(d => d.Mode_Usua_ModificaNavigation)
                    .WithMany(p => p.tbModelosMode_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Mode_Usua_Modifica)
                    .HasConstraintName("FK_tbModelos_Mode_Usua_Modificacion");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.Muni_Id)
                    .HasName("PK__tbMunici__6B07AA3CC2F7288A");

                entity.ToTable("tbMunicipios", "Gral");

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Dept_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Muni_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Dept)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.Dept_Id);

                entity.HasOne(d => d.Muni_Usua_CreacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Muni_Usua_Creacion);

                entity.HasOne(d => d.Muni_Usua_ModificaNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Muni_Usua_Modifica);
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK__tbPantal__CF98C932EA3ADC96");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Pant_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Pant_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Creacion);

                entity.HasOne(d => d.Pant_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPant_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Pant_Usua_Modifica);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.Paro_Id)
                    .HasName("PK__tbPantal__53819DE9F3185389");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.Property(e => e.Paro_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Paro_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Pant_Id);

                entity.HasOne(d => d.Paro_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Creacion);

                entity.HasOne(d => d.Paro_Usua_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPorRolesParo_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Paro_Usua_Modifica);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.Rol_Id);
            });

            modelBuilder.Entity<tbPlanesPagos>(entity =>
            {
                entity.HasKey(e => e.Papa_Id)
                    .HasName("PK__tbPlanes__C5DDEFE0432BC9EE");

                entity.ToTable("tbPlanesPagos", "Cred");

                entity.Property(e => e.Pap_Intereses_Monto).HasColumnType("money");

                entity.Property(e => e.Papa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Papa_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Papa_Fecha_Emision).HasColumnType("datetime");

                entity.Property(e => e.Papa_Fecha_Finalizacion).HasColumnType("datetime");

                entity.Property(e => e.Papa_Fecha_Modificacion).HasColumnType("datetime");

                entity.Property(e => e.Papa_Financiamiento).HasColumnType("money");

                entity.Property(e => e.Papa_Precio_Mercado).HasColumnType("money");

                entity.HasOne(d => d.Papa_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPlanesPagosPapa_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Papa_Usua_Creacion)
                    .HasConstraintName("FK_tbPagoCuotas_Pacu_Usua_Creacion");

                entity.HasOne(d => d.Papa_Usua_ModiNavigation)
                    .WithMany(p => p.tbPlanesPagosPapa_Usua_ModiNavigation)
                    .HasForeignKey(d => d.Papa_Usua_Modi)
                    .HasConstraintName("FK_tbPagoCuotas_Pacu_Usua_Modi");

                entity.HasOne(d => d.Ticu)
                    .WithMany(p => p.tbPlanesPagos)
                    .HasForeignKey(d => d.Ticu_Id)
                    .HasConstraintName("FK_tbPlanesPagos_Ticu_Id");

                entity.HasOne(d => d.Vecl)
                    .WithMany(p => p.tbPlanesPagos)
                    .HasForeignKey(d => d.Vecl_Id)
                    .HasConstraintName("FK_tbPlanesPagos_Vecl_Id");
            });

            modelBuilder.Entity<tbPlanesPagosClientes>(entity =>
            {
                entity.HasKey(e => e.Pacl_Id)
                    .HasName("PK__tbPlanes__7E350E31D94B2C16");

                entity.ToTable("tbPlanesPagosClientes", "Cred");

                entity.Property(e => e.Pacl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Pacl_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Pacl_Fecha_Emision).HasColumnType("datetime");

                entity.Property(e => e.Pacl_Fecha_Modi).HasColumnType("datetime");

                entity.Property(e => e.Pacl_Monto_Pago).HasColumnType("money");

                entity.Property(e => e.Pacl_Pago_Capital).HasColumnType("money");

                entity.Property(e => e.Pacl_Pago_Intereses).HasColumnType("money");

                entity.Property(e => e.Pacl_Pago_Mora).HasColumnType("money");

                entity.HasOne(d => d.Pacl_Usua_CreacionNavigation)
                    .WithMany(p => p.tbPlanesPagosClientesPacl_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Pacl_Usua_Creacion)
                    .HasConstraintName("FK_tbPlanesPagosClientes_Pacl_Usua_Creacion");

                entity.HasOne(d => d.Pacl_Usua_ModiNavigation)
                    .WithMany(p => p.tbPlanesPagosClientesPacl_Usua_ModiNavigation)
                    .HasForeignKey(d => d.Pacl_Usua_Modi)
                    .HasConstraintName("FK_tbPlanesPagosClientes_Pacl_Usua_Modi");

                entity.HasOne(d => d.Papa)
                    .WithMany(p => p.tbPlanesPagosClientes)
                    .HasForeignKey(d => d.Papa_Id)
                    .HasConstraintName("FK_tbPlanesPagosClientes_Papa_Id");

                entity.HasOne(d => d.Sucu)
                    .WithMany(p => p.tbPlanesPagosClientes)
                    .HasForeignKey(d => d.Sucu_Id)
                    .HasConstraintName("FK_tbPlanesPagosClientes_Sucu_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Rol_Id)
                    .HasName("PK__tbRoles__795EBD49F6FE996E");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Rol_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Rol_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Rol_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Rol_Usua_CreacionNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Creacion);

                entity.HasOne(d => d.Rol_Usua_ModificaNavigation)
                    .WithMany(p => p.tbRolesRol_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Rol_Usua_Modifica);
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.Sucu_Id)
                    .HasName("PK__tbSucurs__23271C4046BB5EA3");

                entity.ToTable("tbSucursales", "Gral");

                entity.Property(e => e.Muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Sucu_Calle).IsUnicode(false);

                entity.Property(e => e.Sucu_Direccion).IsUnicode(false);

                entity.Property(e => e.Sucu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Sucu_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Sucu_Fecha_Modi).HasColumnType("datetime");

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.Muni_Id)
                    .HasConstraintName("FK_tbSucursales_Muni_Id");

                entity.HasOne(d => d.Sucu_Usua_CreacionNavigation)
                    .WithMany(p => p.tbSucursalesSucu_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Sucu_Usua_Creacion)
                    .HasConstraintName("FK_tbSucursales_Sucu_Usua_Creacion");

                entity.HasOne(d => d.Sucu_Usua_ModiNavigation)
                    .WithMany(p => p.tbSucursalesSucu_Usua_ModiNavigation)
                    .HasForeignKey(d => d.Sucu_Usua_Modi)
                    .HasConstraintName("FK_tbSucursales_Sucu_Usua_Modi");
            });

            modelBuilder.Entity<tbTipoCuotas>(entity =>
            {
                entity.HasKey(e => e.Ticu_Id)
                    .HasName("PK__tbTipoCu__51858DC36070461B");

                entity.ToTable("tbTipoCuotas", "Cred");

                entity.Property(e => e.Ticu_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ticu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Ticu_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Ticu_Fecha_Modi).HasColumnType("datetime");

                entity.HasOne(d => d.Ticu_Usua_CreacionNavigation)
                    .WithMany(p => p.tbTipoCuotasTicu_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Ticu_Usua_Creacion)
                    .HasConstraintName("FK_tbTipoCuotas_Ticu_Usua_Creacion");

                entity.HasOne(d => d.Ticu_Usua_ModiNavigation)
                    .WithMany(p => p.tbTipoCuotasTicu_Usua_ModiNavigation)
                    .HasForeignKey(d => d.Ticu_Usua_Modi)
                    .HasConstraintName("FK_tbTipoCuotas_Ticu_Usua_Modi");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK__tbUsuari__E863C8EEB5EBA728");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usua_Contra).IsUnicode(false);

                entity.Property(e => e.Usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Usua_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Usua_Usuario)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Empl)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Empl_Id);

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Rol_Id);

                entity.HasOne(d => d.Usua_Usua_CreacionNavigation)
                    .WithMany(p => p.InverseUsua_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Creacion);

                entity.HasOne(d => d.Usua_Usua_ModificaNavigation)
                    .WithMany(p => p.InverseUsua_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Usua_Usua_Modifica);
            });

            modelBuilder.Entity<tbVehiculos>(entity =>
            {
                entity.HasKey(e => e.Vehi_Id)
                    .HasName("PK__tbVehicu__31BC31313E03F2D5");

                entity.ToTable("tbVehiculos", "Cred");

                entity.Property(e => e.Vehi_Color)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Vehi_Descripcion).IsUnicode(false);

                entity.Property(e => e.Vehi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Vehi_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Vehi_Fecha_Modifica).HasColumnType("datetime");

                entity.Property(e => e.Vehi_Placa)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.Mode)
                    .WithMany(p => p.tbVehiculos)
                    .HasForeignKey(d => d.Mode_Id)
                    .HasConstraintName("FK_tbVehiculos_Mode_Id");

                entity.HasOne(d => d.Vehi_Usua_CreacionNavigation)
                    .WithMany(p => p.tbVehiculosVehi_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Vehi_Usua_Creacion)
                    .HasConstraintName("FK_tbVehiculos_Vehi_Usua_Creacion");

                entity.HasOne(d => d.Vehi_Usua_ModificaNavigation)
                    .WithMany(p => p.tbVehiculosVehi_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Vehi_Usua_Modifica)
                    .HasConstraintName("FK_tbVehiculos_Vehi_Usua_Modificacion");
            });

            modelBuilder.Entity<tbVehiculosPorClientes>(entity =>
            {
                entity.HasKey(e => e.Vecl_Id)
                    .HasName("PK__tbVehicu__7674E437B044CFAD");

                entity.ToTable("tbVehiculosPorClientes", "Cred");

                entity.Property(e => e.Vecl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Vecl_Fecha_Creacion).HasColumnType("datetime");

                entity.Property(e => e.Vecl_Fecha_Modifica).HasColumnType("datetime");

                entity.HasOne(d => d.Clie)
                    .WithMany(p => p.tbVehiculosPorClientes)
                    .HasForeignKey(d => d.Clie_Id)
                    .HasConstraintName("FK_tbVehiculosPorClientes_Clie_Id");

                entity.HasOne(d => d.Vecl_Usua_CreacionNavigation)
                    .WithMany(p => p.tbVehiculosPorClientesVecl_Usua_CreacionNavigation)
                    .HasForeignKey(d => d.Vecl_Usua_Creacion)
                    .HasConstraintName("FK_tbVehiculosPorClientes_Vecl_Usua_Creacionn");

                entity.HasOne(d => d.Vecl_Usua_ModificaNavigation)
                    .WithMany(p => p.tbVehiculosPorClientesVecl_Usua_ModificaNavigation)
                    .HasForeignKey(d => d.Vecl_Usua_Modifica)
                    .HasConstraintName("FK_tbVehiculosPorClientess_Vecl_Usua_Modifican");

                entity.HasOne(d => d.Vehi)
                    .WithMany(p => p.tbVehiculosPorClientes)
                    .HasForeignKey(d => d.Vehi_Id)
                    .HasConstraintName("FK_tbVehiculosPorClientes_Vehi_Id");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}